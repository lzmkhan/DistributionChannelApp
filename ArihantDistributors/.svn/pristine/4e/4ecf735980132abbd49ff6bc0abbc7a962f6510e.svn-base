package com.example.arihantdistributors;


import java.util.ArrayList;
import java.util.List;

import com.squareup.picasso.Picasso;

import android.app.ActionBar;
import android.app.Activity;
import android.app.SearchManager;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Color;
import android.graphics.PorterDuff;
import android.graphics.drawable.ColorDrawable;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.os.Bundle;
import android.provider.Contacts;
import android.provider.ContactsContract;
import android.text.Html;
import android.util.Log;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.SearchView;
import android.widget.TextView;
import android.widget.Toast;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;

public class SearchResultsActivity extends Activity {

	  List<Item> myItem = new ArrayList<Item>();
	  static ArrayAdapter<Item> itemAdapter;
	  Context con = this;
	  
	  
	  
	  
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_result);
        handleIntent(getIntent());

		ActionBar ab = getActionBar();
		ab.setTitle("Search Results");
		ab.setBackgroundDrawable(new ColorDrawable(Color.parseColor("#FF9800")));
		ab.setSplitBackgroundDrawable(new ColorDrawable(Color.parseColor("#FF9800")));
		
		 ListView list = (ListView)findViewById(R.id.listviewSearch);
			
		 populateItemListView();
			list.setAdapter(itemAdapter);
			list.deferNotifyDataSetChanged();
			list.setOnItemClickListener(new AdapterView.OnItemClickListener() {
				@Override
				public void onItemClick(AdapterView<?> parent, View viewClicked,
						int position, long id) {
					
					TempData.getInstance().selectedItem = myItem.get(position);
				
					 Intent myIntent = new Intent(SearchResultsActivity.this, MainActivity.class);
						myIntent.putExtra("mode", 1 );
						SearchResultsActivity.this.startActivity(myIntent);
			
			        
					}
			});
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.main, menu);
        SearchManager searchManager =
                (SearchManager) getSystemService(Context.SEARCH_SERVICE);
        SearchView searchView =
                (SearchView) menu.findItem(R.id.menu_search).getActionView();
        searchView.setSearchableInfo(
                searchManager.getSearchableInfo(getComponentName()));
  
        
        
        return true;
    }

    @Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		
		 int itemId = item.getItemId();
		if (itemId == R.id.home) {
			//  Toast.makeText(getBaseContext(), "You selected hone", Toast.LENGTH_SHORT).show();
             Intent i = new Intent(this, MainActivity.class);
			i.putExtra("mode", 0 );
			startActivity(i);
		} else if (itemId == R.id.chat) {
			// Toast.makeText(getBaseContext(), "You selected chat", Toast.LENGTH_SHORT).show();
        	 try
        	 {
             openWhatsApp("919367612418@s.whatsapp.net");
        	 }
        	 catch(Exception e)
        	 {
        		  final customDialog dialog = new customDialog(con);
 					dialog.setContentView(R.layout.chatprompt);
 					dialog.setTitle(Html.fromHtml("<font color='#000000'>Note</font>"));
    
 					Button dialogButton = (Button) dialog.findViewById(R.id.button1);
 					// if button is clicked, close the custom dialog
 					dialogButton.setOnClickListener(new OnClickListener() {
 						@SuppressWarnings("deprecation")
						@Override
 						public void onClick(View v) {
 							Intent addContactIntent = new Intent(Contacts.Intents.Insert.ACTION, Contacts.People.CONTENT_URI);
 							addContactIntent.putExtra(Contacts.Intents.Insert.NAME, "Arihant");				// an example, there is other data available
 							addContactIntent.putExtra(Contacts.Intents.Insert.PHONE_ISPRIMARY, "919367612418");
 							addContactIntent.putExtra(Contacts.Intents.Insert.PHONE, "919367612418");
 							startActivity(addContactIntent);
 							
 							
 							dialog.dismiss();
 						}
 					});

 					dialog.show();
        	 }
		} else if (itemId == R.id.action_settings) {
			//  Toast.makeText(getBaseContext(), "You selected settings", Toast.LENGTH_SHORT).show();
             Intent myIntent = new Intent(SearchResultsActivity.this, SettingsActivity.class);
			myIntent.putExtra("mode", 0 );
			SearchResultsActivity.this.startActivity(myIntent);
		} else if (itemId == R.id.phone) {
			//   Toast.makeText(getBaseContext(), "You selected phone", Toast.LENGTH_SHORT).show();
             Uri call = Uri.parse("tel:"+"914142236304");
			Intent surf = new Intent(Intent.ACTION_DIAL, call);
			startActivity(surf);
		} else if (itemId == R.id.Cart) {
			//    Toast.makeText(getBaseContext(), "You selected Cart", Toast.LENGTH_SHORT).show();
             Intent j = new Intent(SearchResultsActivity.this,Cart.class);
			startActivity(j);
		}
     return true;
	
	}
    private void openWhatsApp(String id) {

   	 Cursor c = getContentResolver().query(ContactsContract.Data.CONTENT_URI,
   	         new String[] { ContactsContract.Contacts.Data._ID }, ContactsContract.Data.DATA1 + "=?",
   	         new String[] { id }, null);
   	 c.moveToFirst();
   	 Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse("content://com.android.contacts/data/" + c.getString(0)));

   	 startActivity(i);
   	 c.close();
   	 }
    
    
    
    
    @Override
    protected void onNewIntent(Intent intent) {
        handleIntent(intent);
    }

    
    public boolean isOnline() {
		  ConnectivityManager connectivityManager  = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
		  NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();
		  return activeNetworkInfo != null && activeNetworkInfo.isConnected();
	}
    
	public void populateItemList(List<Item> input) {
		myItem.clear();
		myItem.addAll(input);
	
		
		
		
	}
	
	  public void populateItemListView() {
	  		 itemAdapter = new ItemListAdapter1(myItem);
	  		//ListView list = (ListView) findViewById(R.id.listviewI);
	  		//list.setAdapter(adapter1);
	  		Log.d("Checkpoint2", "Executed populateitem listview()");
	  	}
    
    private void handleIntent(Intent intent) {

        if (Intent.ACTION_SEARCH.equals(intent.getAction())) {
            String query = intent.getStringExtra(SearchManager.QUERY);
            //use the query to search
            
            /*
             * 
             * Query  =  SELECT * FROM `products` WHERE ProductName LIKE '%NIKE%' 
             * 
             * 
             */
            WebserviceHandler wb = new WebserviceHandler(2); //setup searchquery
    		if(isOnline())
    		{
    		wb.query = "SELECT * FROM `products` WHERE ProductName LIKE '%"+ query +"%'" ;
    		wb.submode =3;
    		wb.set_context(this);
    		wb.execute();
    		}
    		else
    		{
    			Toast.makeText(this, "No Internet connection!", Toast.LENGTH_SHORT).show();
    		}
         
            
        }
    }
    
    
    
    
    
    public class ItemListAdapter1 extends ArrayAdapter<Item> {
		public ItemListAdapter1(List<Item> myItem) {
			
			super(getApplicationContext(), R.layout.list_row1, myItem);
			
			}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			// Make sure we have a view to work with (may have been given null)
			View itemView = convertView;
			if (itemView == null) {
				itemView = getLayoutInflater().inflate(R.layout.list_row1, parent, false);
			}
			
			// Find the Item to work with.
			final Item currentItem = myItem.get(position);
			
			// Fill the view
			ImageView imageView = (ImageView)itemView.findViewById(R.id.itemImage);
		//	imageView.setImageResource(R.drawable.foodicon);
			Picasso.with(getBaseContext()).load("http://autestdomain.comule.com/images/puma.png").into(imageView);
			// title
			TextView titleText = (TextView) itemView.findViewById(R.id.itemTitle);
			int length = currentItem.getItemName().length();
			if(length > 15)
			titleText.setText(currentItem.getItemName().substring(0, 15) +"...");
			else
				titleText.setText(currentItem.getItemName());	
			
		
			//price
			TextView PriceText = (TextView) itemView.findViewById(R.id.itemPriceT);
			PriceText.setText("INR"+currentItem.getItemPrice()+"");
			
            ImageView imageView2 = (ImageView)itemView.findViewById(R.id.addToCart);
            imageView2.setOnClickListener(new OnClickListener(){
            	   @Override
       		    public void onClick(View v) {
            		   // opens up item description window.
            		   TempData.getInstance().selectedItem = currentItem;
            		   final customDialog dialog = new customDialog(con);
   					dialog.setContentView(R.layout.editqntydiag);
   					dialog.setTitle(Html.fromHtml("<font color='#000000'>Quantity</font>"));

   					// set the custom dialog components - text, image and button
   					
   					EditText editText = (EditText) dialog.findViewById(R.id.qntyText);
					editText.getBackground().mutate().setColorFilter(getResources().getColor(R.color.primary_light), PorterDuff.Mode.SRC_ATOP);
   					Button dialogButton = (Button) dialog.findViewById(R.id.button1);
   					// if button is clicked, close the custom dialog
   					dialogButton.setOnClickListener(new OnClickListener() {
   						@Override
   						public void onClick(View v) {
   							EditText ed1 = (EditText) dialog.findViewById(R.id.qntyText);
   							String qnty = ed1.getText().toString();
   							if(!qnty.equals(""))
   							{
   							 int index = TempData.getInstance().cart.chkifalrdyextsinlst(TempData.getInstance().selectedItem);
   							 TempData.getInstance().selectedItem.setItemQnty(Integer.parseInt(qnty));
   							 if( index == -1)
   							 {
   								TempData.getInstance().cart.addToCart(TempData.getInstance().selectedItem); 
   								Toast.makeText(con, "Added item to cart!", Toast.LENGTH_SHORT).show();
   							 }
   							 else
   							 {
   								 TempData.getInstance().cart.updateCartItem(index, TempData.getInstance().selectedItem.getItemQnty());
   								 Toast.makeText(con, "Updated item in cart!", Toast.LENGTH_SHORT).show();
   							 }
   							}
   							else
   							{
   								Toast.makeText(con, "Quantity cannot be empty, item not added!", Toast.LENGTH_SHORT).show();
   							}
   							
   							
   							
   							dialog.dismiss();
   						}
   					});

   					dialog.show();
            	   }
            });

			return itemView;
		}	
	
	}
    
    
    
}
